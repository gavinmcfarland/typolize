{"version":3,"file":"index.cjs.js","sources":["src/lib/clone-rule.js","src/lib/transform-border.js","src/lib/transform-border-radius.js","src/lib/reduce-values.js","src/lib/transform-directional-shorthands.js","src/lib/transform-float.js","src/lib/transform-inset.js","src/lib/transform-resize.js","src/lib/match-side.js","src/lib/match-inset-prefix.js","src/lib/clone-decl.js","src/lib/transform-side.js","src/lib/match-size.js","src/lib/transform-size.js","src/lib/transform-text-align.js","src/lib/split.js","src/lib/transform-transition.js","src/index.js"],"sourcesContent":["import postcss from 'postcss';\n\nexport default (decl, dir) => {\n\tconst rule = Object(decl.parent).type === 'rule' ? decl.parent.clone({\n\t\traws: {}\n\t}).removeAll() : postcss.rule({ selector: '&' });\n\n\trule.selectors = rule.selectors.map(selector => `${selector}:dir(${dir})`);\n\n\treturn rule;\n};\n","import cloneRule from './clone-rule';\n\nconst matchLogicalBorderSide = /^border-(block|block-start|block-end|inline|inline-start|inline-end)(-(width|style|color))?$/i;\n\nexport default {\n\t// border-block\n\t'border-block': (decl, values) => [\n\t\tdecl.clone({\n\t\t\tprop: `border-top${decl.prop.replace(matchLogicalBorderSide, '$2')}`,\n\t\t\tvalue: values[0]\n\t\t}),\n\t\tdecl.clone({\n\t\t\tprop: `border-bottom${decl.prop.replace(matchLogicalBorderSide, '$2')}`,\n\t\t\tvalue: values[0]\n\t\t})\n\t],\n\n\t// border-block-start\n\t'border-block-start': decl => {\n\t\tdecl.prop = `border-top${decl.prop.replace(matchLogicalBorderSide, '$2')}`;\n\t},\n\n\t// border-block-end\n\t'border-block-end': decl => {\n\t\tdecl.prop = `border-bottom${decl.prop.replace(matchLogicalBorderSide, '$2')}`;\n\t},\n\n\t// border-inline\n\t'border-inline': (decl, values, dir) => {\n\t\tconst ltrDecls = [\n\t\t\tdecl.clone({\n\t\t\t\tprop: `border-left${decl.prop.replace(matchLogicalBorderSide, '$2')}`,\n\t\t\t\tvalue: values[0]\n\t\t\t}),\n\t\t\tdecl.clone({\n\t\t\t\tprop: `border-right${decl.prop.replace(matchLogicalBorderSide, '$2')}`,\n\t\t\t\tvalue: values[1] || values[0]\n\t\t\t})\n\t\t];\n\n\t\tconst rtlDecls = [\n\t\t\tdecl.clone({\n\t\t\t\tprop: `border-right${decl.prop.replace(matchLogicalBorderSide, '$2')}`,\n\t\t\t\tvalue: values[0]\n\t\t\t}),\n\t\t\tdecl.clone({\n\t\t\t\tprop: `border-left${decl.prop.replace(matchLogicalBorderSide, '$2')}`,\n\t\t\t\tvalue: values[1] || values[0]\n\t\t\t})\n\t\t];\n\n\t\tconst isLTR = 1 === values.length || 2 === values.length && values[0] === values[1];\n\n\t\treturn isLTR ? ltrDecls : dir === 'ltr' ? ltrDecls : dir === 'rtl' ? rtlDecls : [\n\t\t\tcloneRule(decl, 'ltr').append(ltrDecls),\n\t\t\tcloneRule(decl, 'rtl').append(rtlDecls)\n\t\t];\n\t},\n\n\t// border-inline-start\n\t'border-inline-start': (decl, values, dir) => {\n\t\tconst ltrDecl = decl.clone({\n\t\t\tprop: `border-left${decl.prop.replace(matchLogicalBorderSide, '$2')}`\n\t\t});\n\n\t\tconst rtlDecl = decl.clone({\n\t\t\tprop: `border-right${decl.prop.replace(matchLogicalBorderSide, '$2')}`\n\t\t});\n\n\t\treturn dir === 'ltr' ? ltrDecl : dir === 'rtl' ? rtlDecl : [\n\t\t\tcloneRule(decl, 'ltr').append(ltrDecl),\n\t\t\tcloneRule(decl, 'rtl').append(rtlDecl)\n\t\t];\n\t},\n\n\t// border-inline-end\n\t'border-inline-end': (decl, values, dir) => {\n\t\tconst ltrDecl = decl.clone({\n\t\t\tprop: `border-right${decl.prop.replace(matchLogicalBorderSide, '$2')}`\n\t\t});\n\n\t\tconst rtlDecl = decl.clone({\n\t\t\tprop: `border-left${decl.prop.replace(matchLogicalBorderSide, '$2')}`\n\t\t});\n\n\t\treturn dir === 'ltr' ? ltrDecl : dir === 'rtl' ? rtlDecl : [\n\t\t\tcloneRule(decl, 'ltr').append(ltrDecl),\n\t\t\tcloneRule(decl, 'rtl').append(rtlDecl)\n\t\t];\n\t}\n};\n","import cloneRule from './clone-rule';\n\nconst logicalRadii = /^(border-)(end-end|end-start|start-end|start-start)(-radius)$/i;\nconst ltrRadii = { 'end-end': 'bottom-right', 'end-start': 'bottom-left', 'start-end': 'top-right', 'start-start': 'top-left' };\nconst rtlRadii = { 'end-end': 'bottom-left', 'end-start': 'bottom-right', 'start-end': 'top-left', 'start-start': 'top-right' };\n\nexport default (decl, values, dir) => {\n\tconst ltrDecl = decl.clone({\n\t\tprop: decl.prop.replace(logicalRadii, ($, prefix, direction, suffix) => `${prefix}${ltrRadii[direction]}${suffix}`)\n\t});\n\n\tif (dir === 'ltr') {\n\t\treturn ltrDecl;\n\t}\n\n\tconst rtlDecl = decl.clone({\n\t\tprop: decl.prop.replace(logicalRadii, ($, prefix, direction, suffix) => `${prefix}${rtlRadii[direction]}${suffix}`)\n\t});\n\n\tif (dir === 'rtl') {\n\t\treturn rtlDecl;\n\t}\n\n\treturn [\n\t\tcloneRule(decl, 'ltr').append(ltrDecl),\n\t\tcloneRule(decl, 'rtl').append(rtlDecl)\n\t];\n};\n","export default values => {\n\tconst reducedValues = values.slice();\n\n\t// reduce [A, B, C, B] to [A, B, C]\n\tif (reducedValues.length === 4 && reducedValues[3] === reducedValues[1]) {\n\t\treducedValues.pop();\n\t}\n\n\t// reduce [A, B, A] to [A, B]\n\tif (reducedValues.length === 3 && reducedValues[2] === reducedValues[0]) {\n\t\treducedValues.pop();\n\t}\n\n\t// reduce [A, A] to [A]\n\tif (reducedValues.length === 2 && reducedValues[1] === reducedValues[0]) {\n\t\treducedValues.pop();\n\t}\n\n\treturn reducedValues;\n};\n","import cloneRule from './clone-rule';\nimport reduceValues from './reduce-values';\n\nexport default (decl, values, dir) => {\n\tif ('logical' !== values[0]) {\n\t\treturn null;\n\t}\n\n\t// get logical directions as all, inline, block-end, then inline-end\n\tconst [, all, inline, blockEnd, inlineEnd ] = values;\n\n\t// get left-to-right relative directions from logical directions as:\n\t// → top from all\n\t// → right from inline-end, inline, or all\n\t// → bottom from block-end, block, or all\n\t// → left from inline, or all\n\tconst ltrValues = reduceValues([\n\t\tall,\n\t\tinlineEnd || inline || all,\n\t\tblockEnd || all,\n\t\tinline || all\n\t]);\n\n\tconst ltrDecl = decl.clone({\n\t\tvalue: ltrValues.join(' ')\n\t});\n\n\t// return the ltr values if the values are flow agnostic (where no second inline value was needed)\n\tconst isFlowAgnostic = ltrValues.length < 4;\n\n\tif (isFlowAgnostic || dir === 'ltr') {\n\t\treturn ltrDecl;\n\t}\n\n\t// get right-to-left relative directions from logical directions as:\n\t// → top from all\n\t// → right from inline, or all\n\t// → bottom from block-end, block, or all\n\t// → left from inline-end, inline, or all\n\tconst rtlValues = reduceValues([\n\t\tall,\n\t\tinline || all,\n\t\tblockEnd || all,\n\t\tinlineEnd || inline || all\n\t]);\n\n\tconst rtlDecl = decl.clone({\n\t\tvalue: rtlValues.join(' ')\n\t});\n\n\tif (dir === 'rtl') {\n\t\treturn rtlDecl;\n\t}\n\n\treturn [\n\t\tcloneRule(decl, 'ltr').append(ltrDecl),\n\t\tcloneRule(decl, 'rtl').append(rtlDecl)\n\t];\n}\n","import cloneRule from './clone-rule';\n\nexport default (decl, values, dir) => {\n\tconst lDecl = decl.clone({ value: 'left' });\n\tconst rDecl = decl.clone({ value: 'right' });\n\n\treturn /^inline-start$/i.test(decl.value) ? dir === 'ltr' ? lDecl : dir === 'rtl' ? rDecl : [\n\t\tcloneRule(decl, 'ltr').append(lDecl),\n\t\tcloneRule(decl, 'rtl').append(rDecl)\n\t] : /^inline-end$/i.test(decl.value) ? dir === 'ltr' ? rDecl : dir === 'rtl' ? lDecl : [\n\t\tcloneRule(decl, 'ltr').append(rDecl),\n\t\tcloneRule(decl, 'rtl').append(lDecl)\n\t] : null;\n};\n","import cloneRule from './clone-rule';\n\nexport default (decl, values, dir) => {\n\tif ('logical' !== values[0]) {\n\t\treturn [\n\t\t\tdecl.clone({ prop: 'top', value: values[0] }),\n\t\t\tdecl.clone({ prop: 'right', value: values[1] || values[0] }),\n\t\t\tdecl.clone({ prop: 'bottom', value: values[2] || values[0] }),\n\t\t\tdecl.clone({ prop: 'left', value: values[3] || values[1] || values[0] })\n\t\t];\n\t}\n\n\tconst isLTR = !values[4] || values[4] === values[2];\n\n\tconst ltrDecls = [\n\t\tdecl.clone({ prop: 'top', value: values[1] }),\n\t\tdecl.clone({ prop: 'left', value: values[2] || values[1] }),\n\t\tdecl.clone({ prop: 'bottom', value: values[3] || values[1] }),\n\t\tdecl.clone({ prop: 'right', value: values[4] || values[2] || values[1] })\n\t];\n\n\tconst rtlDecls = [\n\t\tdecl.clone({ prop: 'top', value: values[1] }),\n\t\tdecl.clone({ prop: 'right', value: values[2] || values[1] }),\n\t\tdecl.clone({ prop: 'bottom', value: values[3] || values[1] }),\n\t\tdecl.clone({ prop: 'left', value: values[4] || values[2] || values[1] })\n\t];\n\n\treturn isLTR || dir === 'ltr' ? ltrDecls : dir === 'rtl' ? rtlDecls : [\n\t\tcloneRule(decl, 'ltr').append(ltrDecls),\n\t\tcloneRule(decl, 'rtl').append(rtlDecls)\n\t];\n}\n","export default decl => /^block$/i.test(decl.value)\n\t? decl.clone({ value: 'vertical' })\n\t: /^inline$/i.test(decl.value)\n\t\t? decl.clone({ value: 'horizontal' })\n\t\t: null;\n","export default /^(inset|margin|padding)(?:-(block|block-start|block-end|inline|inline-start|inline-end|start|end))$/i;\n","export default /^inset-/i;\n","import matchSide from './match-side';\nimport matchInsetPrefix from './match-inset-prefix';\n\nexport default (decl, suffix, value) => decl.clone({\n\tprop: `${decl.prop.replace(matchSide, '$1')}${suffix}`.replace(matchInsetPrefix, ''),\n\tvalue\n});\n","import cloneDecl from './clone-decl';\nimport cloneRule from './clone-rule';\nimport matchSide from './match-side';\n\nimport matchInsetPrefix from './match-inset-prefix';\n\nexport default {\n\t// inset-block, margin-block, padding-block\n\t'block': (decl, values) => [\n\t\tcloneDecl(decl, '-top', values[0]),\n\t\tcloneDecl(decl, '-bottom', values[1] || values[0])\n\t],\n\n\t// inset-block-start, margin-block-start, padding-block-start\n\t'block-start': decl => {\n\t\tdecl.prop = decl.prop.replace(matchSide, '$1-top').replace(matchInsetPrefix, '');\n\t},\n\n\t// inset-block-end, margin-block-end, padding-block-end\n\t'block-end': decl => {\n\t\tdecl.prop = decl.prop.replace(matchSide, '$1-bottom').replace(matchInsetPrefix, '');\n\t},\n\n\t// inset-inline, margin-inline, padding-inline\n\t'inline': (decl, values, dir) => {\n\t\tconst ltrDecls = [\n\t\t\tcloneDecl(decl, '-left', values[0]),\n\t\t\tcloneDecl(decl, '-right', values[1] || values[0])\n\t\t];\n\n\t\tconst rtlDecls = [\n\t\t\tcloneDecl(decl, '-right', values[0]),\n\t\t\tcloneDecl(decl, '-left', values[1] || values[0])\n\t\t];\n\n\t\tconst isLTR = 1 === values.length || 2 === values.length && values[0] === values[1];\n\n\t\treturn isLTR ? ltrDecls : dir === 'ltr' ? ltrDecls : dir === 'rtl' ? rtlDecls : [\n\t\t\tcloneRule(decl, 'ltr').append(ltrDecls),\n\t\t\tcloneRule(decl, 'rtl').append(rtlDecls),\n\t\t];\n\t},\n\n\t// inset-inline-start, margin-inline-start, padding-inline-start\n\t'inline-start': (decl, values, dir) => {\n\t\tconst ltrDecl = cloneDecl(decl, '-left', decl.value);\n\t\tconst rtlDecl = cloneDecl(decl, '-right', decl.value);\n\n\t\treturn dir === 'ltr' ? ltrDecl : dir === 'rtl' ? rtlDecl : [\n\t\t\tcloneRule(decl, 'ltr').append(ltrDecl),\n\t\t\tcloneRule(decl, 'rtl').append(rtlDecl)\n\t\t];\n\t},\n\n\t// inset-inline-end, margin-inline-end, padding-inline-end\n\t'inline-end': (decl, values, dir) => {\n\t\tconst ltrDecl = cloneDecl(decl, '-right', decl.value);\n\t\tconst rtlDecl = cloneDecl(decl, '-left', decl.value);\n\n\t\treturn dir === 'ltr' ? ltrDecl : dir === 'rtl' ? rtlDecl : [\n\t\t\tcloneRule(decl, 'ltr').append(ltrDecl),\n\t\t\tcloneRule(decl, 'rtl').append(rtlDecl)\n\t\t];\n\t}\n}\n","export default /^(min-|max-)?(block|inline)-(size)$/i;\n","import matchSize from './match-size';\n\nexport default decl => {\n\tdecl.prop = decl.prop.replace(\n\t\tmatchSize,\n\t\t($0, minmax, flow) => `${minmax||''}${'block' === flow ? 'height' : 'width'}`\n\t);\n}\n","import cloneRule from './clone-rule';\n\nexport default (decl, values, dir) => {\n\tconst lDecl = decl.clone({ value: 'left' });\n\tconst rDecl = decl.clone({ value: 'right' });\n\n\treturn /^start$/i.test(decl.value) ? dir === 'ltr' ? lDecl : dir === 'rtl' ? rDecl : [\n\t\tcloneRule(decl, 'ltr').append(lDecl),\n\t\tcloneRule(decl, 'rtl').append(rDecl)\n\t] : /^end$/i.test(decl.value) ? dir === 'ltr' ? rDecl : dir === 'rtl' ? lDecl : [\n\t\tcloneRule(decl, 'ltr').append(rDecl),\n\t\tcloneRule(decl, 'rtl').append(lDecl)\n\t] : null;\n};\n","export function splitByComma(string, isTrimmed) {\n\treturn splitByRegExp(string, /^,$/, isTrimmed);\n}\n\nexport function splitBySpace(string, isTrimmed) {\n\treturn splitByRegExp(string, /^\\s$/, isTrimmed);\n}\n\nexport function splitBySlash(string, isTrimmed) {\n\treturn splitByRegExp(string, /^\\/$/, isTrimmed);\n}\n\nfunction splitByRegExp(string, re, isTrimmed) {\n\tconst array = [];\n\tlet buffer = '';\n\tlet split = false;\n\tlet func = 0;\n\tlet i = -1;\n\n\twhile (++i < string.length) {\n\t\tconst char = string[i];\n\n\t\tif (char === '(') {\n\t\t\tfunc += 1;\n\t\t} else if (char === ')') {\n\t\t\tif (func > 0) {\n\t\t\t\tfunc -= 1;\n\t\t\t}\n\t\t} else if (func === 0) {\n\t\t\tif (re.test(char)) {\n\t\t\t\tsplit = true;\n\t\t\t}\n\t\t}\n\n\t\tif (split) {\n\t\t\tif (!isTrimmed || buffer.trim()) {\n\t\t\t\tarray.push(isTrimmed ? buffer.trim() : buffer);\n\t\t\t}\n\n\t\t\tif (!isTrimmed) {\n\t\t\t\tarray.push(char);\n\t\t\t}\n\n\t\t\tbuffer = '';\n\t\t\tsplit = false;\n\t\t} else {\n\t\t\tbuffer += char\n\t\t}\n\t}\n\n\tif (buffer !== '') {\n\t\tarray.push(isTrimmed ? buffer.trim() : buffer);\n\t}\n\n\treturn array;\n}\n","import cloneRule from './clone-rule';\nimport { splitByComma, splitBySpace } from './split';\n\nexport default (decl, notValues, dir) => {\n\tconst ltrValues = [];\n\tconst rtlValues = [];\n\n\tsplitByComma(decl.value).forEach(value => {\n\t\tlet hasBeenSplit = false;\n\n\t\tsplitBySpace(value).forEach((word, index, words) => {\n\t\t\tif (word in valueMap) {\n\t\t\t\thasBeenSplit = true;\n\n\t\t\t\tvalueMap[word].ltr.forEach(replacement => {\n\t\t\t\t\tconst clone = words.slice();\n\n\t\t\t\t\tclone.splice(index, 1, replacement);\n\n\t\t\t\t\tif (ltrValues.length && !/^,$/.test(ltrValues[ltrValues.length - 1])) {\n\t\t\t\t\t\tltrValues.push(',');\n\t\t\t\t\t}\n\n\t\t\t\t\tltrValues.push(clone.join(''));\n\t\t\t\t});\n\n\t\t\t\tvalueMap[word].rtl.forEach(replacement => {\n\t\t\t\t\tconst clone = words.slice();\n\n\t\t\t\t\tclone.splice(index, 1, replacement);\n\n\t\t\t\t\tif (rtlValues.length && !/^,$/.test(rtlValues[rtlValues.length - 1])) {\n\t\t\t\t\t\trtlValues.push(',');\n\t\t\t\t\t}\n\n\t\t\t\t\trtlValues.push(clone.join(''));\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tif (!hasBeenSplit) {\n\t\t\tltrValues.push(value);\n\t\t\trtlValues.push(value);\n\t\t}\n\t});\n\n\tconst ltrDecl = decl.clone({ value: ltrValues.join('') });\n\tconst rtlDecl = decl.clone({ value: rtlValues.join('') });\n\n\treturn ltrValues.length && dir === 'ltr'\n\t\t? ltrDecl\n\t: rtlValues.length && dir === 'rtl'\n\t\t? rtlDecl\n\t: ltrDecl.value !== rtlDecl.value\n\t\t? [\n\t\t\tcloneRule(decl, 'ltr').append(ltrDecl),\n\t\t\tcloneRule(decl, 'rtl').append(rtlDecl)\n\t\t]\n\t: null;\n};\n\nconst valueMap = {\n\t// Logical Height and Logical Width\n\t'block-size': { ltr: ['height'], rtl: ['height'] },\n\t'inline-size': { ltr: ['width'], rtl: ['width'] },\n\n\t// Flow-relative Margins\n\t'margin-block-end': { ltr: ['margin-bottom'], rtl: ['margin-bottom'] },\n\t'margin-block-start': { ltr: ['margin-top'], rtl: ['margin-top'] },\n\t'margin-block': { ltr: ['margin-top', 'margin-bottom'], rtl: ['margin-top', 'margin-bottom'] },\n\t'margin-inline-end': { ltr: ['margin-right'], rtl: ['margin-left'] },\n\t'margin-inline-start': { ltr: ['margin-left'], rtl: ['margin-right'] },\n\t'margin-inline': { ltr: ['margin-left', 'margin-right'], rtl: ['margin-left', 'margin-right'] },\n\n\t// Flow-relative Offsets\n\t'inset-block-end': { ltr: ['bottom'], rtl: ['bottom'] },\n\t'inset-block-start': { ltr: ['top'], rtl: ['top'] },\n\t'inset-block': { ltr: ['top', 'bottom'], rtl: ['top', 'bottom'] },\n\t'inset-inline-end': { ltr: ['right'], rtl: ['left'] },\n\t'inset-inline-start': { ltr: ['left'], rtl: ['right'] },\n\t'inset-inline': { ltr: ['left', 'right'], rtl: ['left', 'right'] },\n\t'inset': { ltr: ['top', 'right', 'bottom', 'left'], rtl: ['top', 'right', 'bottom', 'left'] },\n\n\t// Flow-relative Padding\n\t'padding-block-end': { ltr: ['padding-bottom'], rtl: ['padding-bottom'] },\n\t'padding-block-start': { ltr: ['padding-top'], rtl: ['padding-top'] },\n\t'padding-block': { ltr: ['padding-top', 'padding-bottom'], rtl: ['padding-top', 'padding-bottom'] },\n\t'padding-inline-end': { ltr: ['padding-right'], rtl: ['padding-left'] },\n\t'padding-inline-start': { ltr: ['padding-left'], rtl: ['padding-right'] },\n\t'padding-inline': { ltr: ['padding-left', 'padding-right'], rtl: ['padding-left', 'padding-right'] },\n\n\t// Flow-relative Borders\n\t'border-block-color': { ltr: ['border-top-color', 'border-bottom-color'], rtl: ['border-top-color', 'border-bottom-color'] },\n\t'border-block-end-color': { ltr: ['border-bottom-color'], rtl: ['border-bottom-color'] },\n\t'border-block-end-style': { ltr: ['border-bottom-style'], rtl: ['border-bottom-style'] },\n\t'border-block-end-width': { ltr: ['border-bottom-width'], rtl: ['border-bottom-width'] },\n\t'border-block-end': { ltr: ['border-bottom'], rtl: ['border-bottom'] },\n\t'border-block-start-color': { ltr: ['border-top-color'], rtl: ['border-top-color'] },\n\t'border-block-start-style': { ltr: ['border-top-style'], rtl: ['border-top-style'] },\n\t'border-block-start-width': { ltr: ['border-top-width'], rtl: ['border-top-width'] },\n\t'border-block-start': { ltr: ['border-top'], rtl: ['border-top'] },\n\t'border-block-style': { ltr: ['border-top-style', 'border-bottom-style'], rtl: ['border-top-style', 'border-bottom-style'] },\n\t'border-block-width': { ltr: ['border-top-width', 'border-bottom-width'], rtl: ['border-top-width', 'border-bottom-width'] },\n\t'border-block': { ltr: ['border-top', 'border-bottom'], rtl: ['border-top', 'border-bottom'] },\n\t'border-inline-color': { ltr: ['border-left-color', 'border-right-color'], rtl: ['border-left-color', 'border-right-color'] },\n\t'border-inline-end-color': { ltr: ['border-right-color'], rtl: ['border-left-color'] },\n\t'border-inline-end-style': { ltr: ['border-right-style'], rtl: ['border-left-style'] },\n\t'border-inline-end-width': { ltr: ['border-right-width'], rtl: ['border-left-width'] },\n\t'border-inline-end': { ltr: ['border-right'], rtl: ['border-left'] },\n\t'border-inline-start-color': { ltr: ['border-left-color'], rtl: ['border-right-color'] },\n\t'border-inline-start-style': { ltr: ['border-left-style'], rtl: ['border-right-style'] },\n\t'border-inline-start-width': { ltr: ['border-left-width'], rtl: ['border-right-width'] },\n\t'border-inline-start': { ltr: ['border-left'], rtl: ['border-right'] },\n\t'border-inline-style': { ltr: ['border-left-style', 'border-right-style'], rtl: ['border-left-style', 'border-right-style'] },\n\t'border-inline-width': { ltr: ['border-left-width', 'border-right-width'], rtl: ['border-left-width', 'border-right-width'] },\n\t'border-inline': { ltr: ['border-left', 'border-right'], rtl: ['border-left', 'border-right'] },\n\n\t// Flow-relative Corner Rounding\n\t'border-end-end-radius': { ltr: ['border-bottom-right-radius'], rtl: ['border-bottom-left-radius'] },\n\t'border-end-start-radius': { ltr: ['border-bottom-left-radius'], rtl: ['border-bottom-right-radius'] },\n\t'border-start-end-radius': { ltr: ['border-top-right-radius'], rtl: ['border-top-left-radius'] },\n\t'border-start-start-radius': { ltr: ['border-top-left-radius'], rtl: ['border-top-right-radius'] }\n};\n","// tooling\nimport postcss from 'postcss';\n\n// internal tooling\nimport transformBorder from './lib/transform-border';\nimport transformBorderRadius from './lib/transform-border-radius';\nimport transformDirectionalShorthands from './lib/transform-directional-shorthands';\nimport transformFloat from './lib/transform-float';\nimport transformInset from './lib/transform-inset';\nimport transformResize from './lib/transform-resize';\nimport transformSide from './lib/transform-side';\nimport transformSize from './lib/transform-size';\nimport transformTextAlign from './lib/transform-text-align';\nimport transformTransition from './lib/transform-transition';\nimport { splitBySpace } from './lib/split';\n\n// supported transforms\nconst transforms = {\n\t// Flow-Relative Values\n\t'clear': transformFloat,\n\t'float': transformFloat,\n\t'resize': transformResize,\n\t'text-align': transformTextAlign,\n\n\t// Logical Height and Logical Width\n\t'block-size': transformSize, 'max-block-size': transformSize, 'min-block-size': transformSize,\n\t'inline-size': transformSize, 'max-inline-size': transformSize, 'min-inline-size': transformSize,\n\n\t// Flow-relative Margins\n\t'margin': transformDirectionalShorthands, 'margin-inline': transformSide['inline'], 'margin-inline-end': transformSide['inline-end'], 'margin-inline-start': transformSide['inline-start'], 'margin-block': transformSide['block'], 'margin-block-end': transformSide['block-end'], 'margin-block-start': transformSide['block-start'],\n\n\t// Flow-relative Offsets\n\t'inset': transformInset, 'inset-inline': transformSide['inline'], 'inset-inline-end': transformSide['inline-end'], 'inset-inline-start': transformSide['inline-start'], 'inset-block': transformSide['block'], 'inset-block-end': transformSide['block-end'], 'inset-block-start': transformSide['block-start'],\n\n\t// Flow-relative Padding\n\t'padding': transformDirectionalShorthands, 'padding-inline': transformSide['inline'], 'padding-inline-end': transformSide['inline-end'], 'padding-inline-start': transformSide['inline-start'], 'padding-block': transformSide['block'], 'padding-block-end': transformSide['block-end'], 'padding-block-start': transformSide['block-start'],\n\n\t// Flow-relative Borders\n\t'border-block':        transformBorder['border-block'],        'border-block-color':        transformBorder['border-block'],        'border-block-style':        transformBorder['border-block'],        'border-block-width':        transformBorder['border-block'],\n\t'border-block-end':    transformBorder['border-block-end'],    'border-block-end-color':    transformBorder['border-block-end'],    'border-block-end-style':    transformBorder['border-block-end'],    'border-block-end-width':    transformBorder['border-block-end'],\n\t'border-block-start':  transformBorder['border-block-start'],  'border-block-start-color':  transformBorder['border-block-start'],  'border-block-start-style':  transformBorder['border-block-start'],  'border-block-start-width':  transformBorder['border-block-start'],\n\t'border-inline':       transformBorder['border-inline'],       'border-inline-color':       transformBorder['border-inline'],       'border-inline-style':       transformBorder['border-inline'],       'border-inline-width':       transformBorder['border-inline'],\n\t'border-inline-end':   transformBorder['border-inline-end'],   'border-inline-end-color':   transformBorder['border-inline-end'],   'border-inline-end-style':   transformBorder['border-inline-end'],   'border-inline-end-width':   transformBorder['border-inline-end'],\n\t'border-inline-start': transformBorder['border-inline-start'], 'border-inline-start-color': transformBorder['border-inline-start'], 'border-inline-start-style': transformBorder['border-inline-start'], 'border-inline-start-width': transformBorder['border-inline-start'],\n\n\t// Flow-relative Corner Rounding\n\t'border-end-end-radius': transformBorderRadius, 'border-end-start-radius': transformBorderRadius, 'border-start-end-radius': transformBorderRadius, 'border-start-start-radius': transformBorderRadius,\n\n\t// Four-Directional Shorthand Border Properties\n\t'border-color': transformDirectionalShorthands, 'border-style': transformDirectionalShorthands, 'border-width': transformDirectionalShorthands,\n\n\t// Transition helpers\n\t'transition': transformTransition, 'transition-property': transformTransition\n};\n\nconst transformsRegExp = new RegExp(`^(${Object.keys(transforms).join('|')})$`, 'i');\n\n// properties whose values will not be split\nconst unsplitPropRegExp = /^(border-block|border-block-end|border-block-start|border-inline|border-inline-end|border-inline-start)$/i;\n\n// plugin\nexport default postcss.plugin('postcss-logical-properties', opts => {\n\topts = Object(opts);\n\n\tconst preserve = Boolean(opts.preserve);\n\tconst dir = !preserve && typeof opts.dir === 'string'\n\t\t? /^rtl$/i.test(opts.dir)\n\t\t\t? 'rtl'\n\t\t: 'ltr'\n\t: false;\n\n\treturn root => {\n\t\troot.walkDecls(transformsRegExp, decl => {\n\t\t\tconst parent = decl.parent;\n\t\t\tconst values = unsplitPropRegExp.test(decl.prop) ? [decl.value] : splitBySpace(decl.value, true);\n\t\t\tconst prop = decl.prop.toLowerCase();\n\n\t\t\tconst replacer = transforms[prop](decl, values, dir);\n\n\t\t\tif (!replacer) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t[].concat(replacer).forEach(replacement => {\n\t\t\t\tif (replacement.type === 'rule') {\n\t\t\t\t\tparent.before(replacement);\n\t\t\t\t} else {\n\t\t\t\t\tdecl.before(replacement);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (preserve) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdecl.remove();\n\n\t\t\tif (!parent.nodes.length) {\n\t\t\t\tparent.remove();\n\t\t\t}\n\t\t});\n\t};\n});\n"],"names":["decl","dir","rule","Object","parent","type","clone","raws","removeAll","postcss","selector","selectors","map","matchLogicalBorderSide","values","prop","replace","value","ltrDecls","rtlDecls","isLTR","length","cloneRule","append","ltrDecl","rtlDecl","logicalRadii","ltrRadii","rtlRadii","$","prefix","direction","suffix","reducedValues","slice","pop","all","inline","blockEnd","inlineEnd","ltrValues","reduceValues","join","isFlowAgnostic","rtlValues","lDecl","rDecl","test","matchSide","matchInsetPrefix","cloneDecl","matchSize","$0","minmax","flow","splitByComma","string","isTrimmed","splitByRegExp","splitBySpace","re","array","buffer","split","func","i","char","trim","push","notValues","forEach","hasBeenSplit","word","index","words","valueMap","ltr","replacement","splice","rtl","transforms","transformFloat","transformResize","transformTextAlign","transformSize","transformDirectionalShorthands","transformSide","transformInset","transformBorder","transformBorderRadius","transformTransition","transformsRegExp","RegExp","keys","unsplitPropRegExp","plugin","opts","preserve","Boolean","root","walkDecls","toLowerCase","replacer","concat","before","remove","nodes"],"mappings":"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"}